name: check-prerelease

on:
  pull_request:
    branches:
      - dev
    types:
      - opened
      - synchronize
      - reopened

permissions:
  contents: read
  pull-requests: write

jobs:
  check-prerelease:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Get published version from npm
        id: prev
        run: |
          VERSION=$(npm view h1z1-server@next version)
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Read current version from package.json
        id: current
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Compare versions
        id: compare
        run: |
          if [ "${{ steps.prev.outputs.version }}" != "${{ steps.current.outputs.version }}" ]; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Check if new version is prerelease
        id: prerelease
        run: |
          VERSION=${{ steps.current.outputs.version }}
          if [[ "$VERSION" == *-* ]]; then
            echo "isprerelease=true" >> $GITHUB_OUTPUT
          else
            echo "isprerelease=false" >> $GITHUB_OUTPUT
          fi

      - name: Ensure version changed and is prerelease
        if: steps.compare.outputs.changed == 'true' && steps.prerelease.outputs.isprerelease == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const version = "${{ steps.current.outputs.version }}";
            const prNumber = context.payload.pull_request.number;
            const body = `ðŸš€ If this PR is merged into \`dev\`, version \`${version}\` will be published as a prerelease.\n\nâœ… Ensure itâ€™s been reviewed and approved before merging.`;
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              body,
            });
